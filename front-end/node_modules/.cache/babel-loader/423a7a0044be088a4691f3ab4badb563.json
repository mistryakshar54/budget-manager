{"ast":null,"code":"import _objectSpread from \"/Users/akshar.mistry/Desktop/Workspace/budget-manager/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { initialState } from './DefaultState';\n\nconst PaymentReducer = (state = initialState.paymentData, action) => {\n  switch (action.type) {\n    case 'ADD_PAYMENT_METHOD':\n      {\n        debugger;\n        let paymentDataObj = Object.assign({}, state.paymentData);\n        let paymentData;\n\n        if (paymentDataObj.paymentDataArr) {} else {}\n\n        return _objectSpread({}, state, {\n          paymentData: paymentDataArr.concat(action.payload)\n        });\n      }\n\n    case 'EDIT_PAYMENT_METHOD':\n      {\n        let paymentDataArr = Object.assign([], state.paymentData);\n        let matchIndex = -1;\n        paymentDataArr.forEach((item, index) => {\n          if (item.id === action.payload.id) {\n            matchIndex = index;\n          }\n        });\n\n        if (matchIndex > -1) {\n          paymentDataArr[matchIndex] = action.payload;\n          return _objectSpread({}, state, {\n            paymentData: paymentDataArr\n          });\n        } else {\n          return _objectSpread({}, state);\n        }\n      }\n\n    case 'DELETE_PAYMENT_METHOD':\n      {\n        let paymentDataArr = Object.assign([], state.paymentData);\n        let matchIndex = -1;\n        paymentDataArr.forEach((item, index) => {\n          if (item.id === action.payload.id) {\n            matchIndex = index;\n          }\n        });\n\n        if (matchIndex > -1) {\n          paymentDataArr.splice(matchIndex, 1);\n          return _objectSpread({}, state, {\n            paymentData: paymentDataArr\n          });\n        } else {\n          return _objectSpread({}, state);\n        }\n      }\n\n    case 'FETCH_PAYMENT_METHOD':\n      {\n        return _objectSpread({}, state);\n      }\n\n    case 'SUCCESS_PAYMENT_METHOD':\n      {\n        let apiReqStatus = Object.assign({}, state.apiRequest);\n        apiReqStatus.message = \"Success\";\n        apiReqStatus.status = 200;\n        apiReqStatus.apiInProcess = false;\n        return _objectSpread({}, state, {\n          apiRequest: apiReqStatus\n        });\n      }\n\n    case 'ERROR_PAYMENT_METHOD':\n      {\n        let apiReqStatus = Object.assign({}, state.apiRequest);\n        apiReqStatus.message = \"Error\" + action.payload.error;\n        apiReqStatus.status = action.payload.status;\n        apiReqStatus.apiInProcess = false;\n        return _objectSpread({}, state, {\n          apiRequest: apiReqStatus\n        });\n      }\n\n    case 'IN_PROCESS_PAYMENT_METHOD':\n      {\n        let apiReqStatus = Object.assign({}, state.apiRequest);\n        apiReqStatus.message = \"In Process\";\n        apiReqStatus.status = 0;\n        apiReqStatus.apiInProcess = true;\n        return _objectSpread({}, state, {\n          apiRequest: apiReqStatus\n        });\n      }\n\n    default:\n      {\n        debugger;\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default PaymentReducer;","map":{"version":3,"sources":["/Users/akshar.mistry/Desktop/Workspace/budget-manager/front-end/src/store/reducers/PaymentReducer.js"],"names":["initialState","PaymentReducer","state","paymentData","action","type","paymentDataObj","Object","assign","paymentDataArr","concat","payload","matchIndex","forEach","item","index","id","splice","apiReqStatus","apiRequest","message","status","apiInProcess","error"],"mappings":"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","sourcesContent":["import {initialState} from './DefaultState';\n\n\nconst PaymentReducer  = ( state = initialState.paymentData , action ) => {\n    switch(action.type){\n        case 'ADD_PAYMENT_METHOD' : {\n            debugger;\n            let paymentDataObj = Object.assign({} , state.paymentData);\n            let paymentData\n            if(paymentDataObj.paymentDataArr)\n            {\n\n            }\n            else\n            {\n\n            }\n            return{\n                ...state,\n                paymentData : paymentDataArr.concat(action.payload)\n            }\n           \n        }\n        case 'EDIT_PAYMENT_METHOD' : {\n\n            let paymentDataArr = Object.assign([] , state.paymentData);\n            let matchIndex = -1;\n            paymentDataArr.forEach( (item , index) => {\n                if(item.id === action.payload.id)\n                {\n                    matchIndex = index;\n                }\n            });\n            if(matchIndex > -1)\n            {\n                paymentDataArr[matchIndex] = action.payload;\n                return{\n                    ...state,\n                    paymentData : paymentDataArr\n                }\n            }\n            else\n            {\n                return{\n                   ...state\n                }\n            }\n        }\n        case 'DELETE_PAYMENT_METHOD' : {\n\n            let paymentDataArr = Object.assign([] , state.paymentData);\n            let matchIndex = -1;\n            paymentDataArr.forEach( (item , index) => {\n                if(item.id === action.payload.id)\n                {\n                    matchIndex = index;\n                }\n            });\n            if(matchIndex > -1)\n            {\n                paymentDataArr.splice(matchIndex , 1);\n                return{\n                    ...state,\n                    paymentData : paymentDataArr\n                }\n            }\n            else\n            {\n                return{\n                   ...state\n                }\n            }\n        }\n        case 'FETCH_PAYMENT_METHOD' : {\n\n            return {\n                ...state\n            }\n        }\n        case 'SUCCESS_PAYMENT_METHOD' : {\n            let apiReqStatus = Object.assign({} , state.apiRequest);\n            apiReqStatus.message=\"Success\";\n            apiReqStatus.status=200;\n            apiReqStatus.apiInProcess=false;\n            return {\n                ...state,\n                apiRequest : apiReqStatus\n            }\n        }\n        case 'ERROR_PAYMENT_METHOD' : {\n            let apiReqStatus = Object.assign({} , state.apiRequest);\n            apiReqStatus.message=\"Error\" + action.payload.error;\n            apiReqStatus.status=action.payload.status;\n            apiReqStatus.apiInProcess=false;\n            return {\n                ...state,\n                apiRequest : apiReqStatus\n            }\n        }\n        case 'IN_PROCESS_PAYMENT_METHOD' : {\n\n            let apiReqStatus = Object.assign({} , state.apiRequest);\n            apiReqStatus.message=\"In Process\";\n            apiReqStatus.status=0;\n            apiReqStatus.apiInProcess=true;\n            return {\n                ...state,\n                apiRequest : apiReqStatus\n            }\n        }\n        default : {\n            debugger\n            return {\n                ...state\n            }\n        }\n    }\n};\n\nexport default PaymentReducer;"]},"metadata":{},"sourceType":"module"}