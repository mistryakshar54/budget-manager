{"ast":null,"code":"import _objectSpread from \"/Users/akshar.mistry/Desktop/Workspace/budget-manager/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { initialState } from './DefaultState';\n\nconst PaymentReducer = (state = initialState.paymentData, action) => {\n  switch (action.type) {\n    case 'ADD_PAYMENT_METHOD':\n      {\n        let paymentDataObj = Object.assign({}, state);\n        return _objectSpread({}, state, {\n          paymentModeArr: paymentDataObj.paymentModeArr.concat(action.payload)\n        });\n      }\n\n    case 'EDIT_PAYMENT_METHOD':\n      {\n        let paymentDataArr = Object.assign([], state.paymentData);\n        let matchIndex = -1;\n        paymentDataArr.forEach((item, index) => {\n          if (item.id === action.payload.id) {\n            matchIndex = index;\n          }\n        });\n\n        if (matchIndex > -1) {\n          paymentDataArr[matchIndex] = action.payload;\n          return _objectSpread({}, state, {\n            paymentData: paymentDataArr\n          });\n        } else {\n          return _objectSpread({}, state);\n        }\n      }\n\n    case 'DELETE_PAYMENT_METHOD':\n      {\n        let paymentData = Object.assign([], state);\n        let matchIndex = -1;\n        paymentData.paymentModeArr.forEach((item, index) => {\n          if (item.id === action.payload.id) {\n            matchIndex = index;\n          }\n        });\n\n        if (matchIndex > -1) {\n          paymentData.paymentModeArr.splice(matchIndex, 1);\n          return _objectSpread({}, state, {\n            paymentModeArr: paymentData.paymentModeArr\n          });\n        } else {\n          return _objectSpread({}, state);\n        }\n      }\n\n    case 'FETCH_PAYMENT_METHOD':\n      {\n        return _objectSpread({}, state);\n      }\n\n    case 'FETCH_PAYMENT_MODE_DETAIL':\n      {\n        return _objectSpread({}, state, {\n          selectedPaymentDetail: state.paymentModeArr[matchIndex]\n        });\n      }\n\n    case 'LOAD_PAYMENT_DETAIL':\n      {\n        let matchIndex = -1;\n        state.paymentModeArr.forEach((item, index) => {\n          if (item.id === action.payload.paymentModeId) {\n            matchIndex = index;\n          }\n        });\n\n        if (matchIndex > -1) {\n          state.paymentModeArr.splice(matchIndex, 1);\n          return _objectSpread({}, state, {\n            selectedPaymentDetail: state.paymentModeArr[matchIndex]\n          });\n        } else {\n          return _objectSpread({}, state, {\n            selectedPaymentDetail: {}\n          });\n        }\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default PaymentReducer;","map":{"version":3,"sources":["/Users/akshar.mistry/Desktop/Workspace/budget-manager/front-end/src/store/reducers/PaymentReducer.js"],"names":["initialState","PaymentReducer","state","paymentData","action","type","paymentDataObj","Object","assign","paymentModeArr","concat","payload","paymentDataArr","matchIndex","forEach","item","index","id","splice","selectedPaymentDetail","paymentModeId"],"mappings":"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","sourcesContent":["import {initialState} from './DefaultState';\n\n\nconst PaymentReducer  = ( state = initialState.paymentData , action ) => {\n    switch(action.type){\n        case 'ADD_PAYMENT_METHOD' : {\n            let paymentDataObj = Object.assign({} , state);\n            \n            return{\n                ...state,\n                paymentModeArr : paymentDataObj.paymentModeArr.concat(action.payload)\n            }\n           \n        }\n        case 'EDIT_PAYMENT_METHOD' : {\n\n            let paymentDataArr = Object.assign([] , state.paymentData);\n            let matchIndex = -1;\n            paymentDataArr.forEach( (item , index) => {\n                if(item.id === action.payload.id)\n                {\n                    matchIndex = index;\n                }\n            });\n            if(matchIndex > -1)\n            {\n                paymentDataArr[matchIndex] = action.payload;\n                return{\n                    ...state,\n                    paymentData : paymentDataArr\n                }\n            }\n            else\n            {\n                return{\n                   ...state\n                }\n            }\n        }\n        case 'DELETE_PAYMENT_METHOD' : {\n\n            let paymentData = Object.assign([] , state);\n            let matchIndex = -1;\n            paymentData.paymentModeArr.forEach( (item , index) => {\n                if(item.id === action.payload.id)\n                {\n                    matchIndex = index;\n                }\n            });\n            if(matchIndex > -1)\n            {\n                paymentData.paymentModeArr.splice(matchIndex , 1);\n                return{\n                    ...state,\n                    paymentModeArr : paymentData.paymentModeArr\n                }\n            }\n            else\n            {\n                return{\n                   ...state\n                }\n            }\n        }\n        case 'FETCH_PAYMENT_METHOD' : {\n\n            return {\n                ...state\n            }\n        }\n        case 'FETCH_PAYMENT_MODE_DETAIL':{\n            return{\n                ...state,\n                selectedPaymentDetail : state.paymentModeArr[matchIndex]\n            }\n        }\n        case 'LOAD_PAYMENT_DETAIL' : {\n            let matchIndex = -1;\n            state.paymentModeArr.forEach( (item , index) => {\n                if(item.id === action.payload.paymentModeId)\n                {\n                    matchIndex = index;\n                }\n            });\n            if(matchIndex > -1)\n            {\n                state.paymentModeArr.splice(matchIndex , 1);\n                return{\n                    ...state,\n                    selectedPaymentDetail : state.paymentModeArr[matchIndex]\n                }\n            }\n            else\n            {\n                return{\n                   ...state,\n                   selectedPaymentDetail : {}\n                }\n            }\n        }\n        default : {\n            return {\n                ...state\n            }\n        }\n    }\n};\n\nexport default PaymentReducer;"]},"metadata":{},"sourceType":"module"}