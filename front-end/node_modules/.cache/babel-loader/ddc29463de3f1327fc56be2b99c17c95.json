{"ast":null,"code":"var _jsxFileName = \"/Users/akshar.mistry/Desktop/Workspace/budget-manager/front-end/src/components/PaymentModes/EditPayment/EditPaymentMeth.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport Form from 'react-bootstrap/Form';\nimport * as PaymentActions from '../../../store/actions/PaymentActionCreators';\nimport EditPaymentFrom from './EditPaymentForm';\n\nlet EditPaymentMeth = props => {\n  useEffect(() => {\n    let idToFetch = props.match.params.paymentModeId;\n\n    if (props.match.params.paymentModeId) {\n      props.onLoadDataHandler(idToFetch);\n    }\n  }, []);\n\n  const onFormSubmitHandler = formValues => {\n    console.log(formValues);\n  };\n\n  if (props.requestState) {\n    if (props.requestState.apiInProcess === true) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Loading\");\n    } else {\n      debugger;\n\n      if (props.requestState.status == 200 && props.initialValues.id == parseInt(props.match.params.paymentModeId)) {\n        return React.createElement(EditPaymentFrom, {\n          onSubmit: onFormSubmitHandler,\n          initialValues: props.initialValues,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"No data fetched!!\");\n      }\n    }\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    initialValues: state.PaymentReducer.selectedPaymentDetail,\n    requestState: state.ApiReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoadDataHandler: idToFetch => dispatch(PaymentActions.loadPaymentData(idToFetch))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPaymentMeth);","map":{"version":3,"sources":["/Users/akshar.mistry/Desktop/Workspace/budget-manager/front-end/src/components/PaymentModes/EditPayment/EditPaymentMeth.js"],"names":["React","useState","useEffect","connect","Field","reduxForm","Form","PaymentActions","EditPaymentFrom","EditPaymentMeth","props","idToFetch","match","params","paymentModeId","onLoadDataHandler","onFormSubmitHandler","formValues","console","log","requestState","apiInProcess","status","initialValues","id","parseInt","mapStateToProps","state","PaymentReducer","selectedPaymentDetail","ApiReducer","mapDispatchToProps","dispatch","loadPaymentData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,KAAKC,cAAZ,MAAgC,8CAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7BR,EAAAA,SAAS,CAAE,MAAM;AAEb,QAAIS,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,aAAnC;;AACA,QAAGJ,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,aAAtB,EACA;AACIJ,MAAAA,KAAK,CAACK,iBAAN,CAAwBJ,SAAxB;AACH;AACJ,GAPQ,EAOP,EAPO,CAAT;;AAUA,QAAMK,mBAAmB,GAAKC,UAAF,IAAkB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,GAFD;;AAIA,MAAGP,KAAK,CAACU,YAAT,EACA;AACI,QAAGV,KAAK,CAACU,YAAN,CAAmBC,YAAnB,KAAoC,IAAvC,EACA;AACI,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACH,KAHD,MAKA;AACI;;AACA,UAAIX,KAAK,CAACU,YAAN,CAAmBE,MAAnB,IAA6B,GAA7B,IAAoCZ,KAAK,CAACa,aAAN,CAAoBC,EAApB,IAA0BC,QAAQ,CAACf,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,aAApB,CAA1E,EACA;AACG,eACI,oBAAC,eAAD;AAAiB,UAAA,QAAQ,EAAEE,mBAA3B;AAAgD,UAAA,aAAa,EAAEN,KAAK,CAACa,aAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGF,OALD,MAOA;AACI,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACH;AAEJ;AACJ;AAEJ,CAtCD;;AAwCA,MAAMG,eAAe,GAAKC,KAAF,IAAY;AAChC,SAAO;AACHJ,IAAAA,aAAa,EAAGI,KAAK,CAACC,cAAN,CAAqBC,qBADlC;AAEHT,IAAAA,YAAY,EAAGO,KAAK,CAACG;AAFlB,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAKC,QAAF,IAAgB;AACvC,SAAM;AACFjB,IAAAA,iBAAiB,EAAIJ,SAAD,IAAeqB,QAAQ,CAAEzB,cAAc,CAAC0B,eAAf,CAA+BtB,SAA/B,CAAF;AADzC,GAAN;AAGH,CAJD;;AAOA,eAAeR,OAAO,CAACuB,eAAD,EAAmBK,kBAAnB,CAAP,CAA8CtB,eAA9C,CAAf","sourcesContent":["import React, { useState , useEffect } from 'react';\nimport {connect} from 'react-redux';\nimport { Field, reduxForm } from 'redux-form'\nimport Form from 'react-bootstrap/Form'\nimport * as PaymentActions from '../../../store/actions/PaymentActionCreators';\nimport EditPaymentFrom from './EditPaymentForm';\n\nlet EditPaymentMeth = (props) => {\n    useEffect( () => {\n        \n        let idToFetch = props.match.params.paymentModeId;\n        if(props.match.params.paymentModeId)\n        {\n            props.onLoadDataHandler(idToFetch);\n        }\n    },[] );\n\n\n    const onFormSubmitHandler = ( formValues ) => {\n        console.log(formValues);\n    }\n\n    if(props.requestState)\n    {\n        if(props.requestState.apiInProcess === true)\n        {\n            return(<h1>Loading</h1>);\n        }\n        else\n        {\n            debugger;\n            if( props.requestState.status == 200 && props.initialValues.id == parseInt(props.match.params.paymentModeId) )\n            {\n               return( \n                   <EditPaymentFrom onSubmit={onFormSubmitHandler} initialValues={props.initialValues} />\n               );\n            }\n            else\n            {\n                return(<h1>No data fetched!!</h1>);\n            }\n           \n        }\n    }\n\n}\n\nconst mapStateToProps = ( state) => {\n    return {\n        initialValues : state.PaymentReducer.selectedPaymentDetail,\n        requestState : state.ApiReducer,\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => {\n    return{\n        onLoadDataHandler : (idToFetch) => dispatch( PaymentActions.loadPaymentData(idToFetch) )\n    }\n}\n\n\nexport default connect(mapStateToProps , mapDispatchToProps)(EditPaymentMeth);"]},"metadata":{},"sourceType":"module"}