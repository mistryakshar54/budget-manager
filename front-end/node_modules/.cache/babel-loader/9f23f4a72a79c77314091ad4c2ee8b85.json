{"ast":null,"code":"var _jsxFileName = \"/Users/akshar.mistry/Desktop/Workspace/budget-manager/front-end/src/components/PaymentModes/EditPayment/EditPaymentMeth.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport Form from 'react-bootstrap/Form';\nimport * as PaymentActions from '../../../store/actions/PaymentActionCreators';\n\nlet EditPaymentMeth = props => {\n  debugger;\n  useEffect(() => {\n    let idToFetch = props.match.params.paymentModeId;\n\n    if (props.match.params.paymentModeId) {\n      props.onLoadDataHandler(idToFetch);\n    }\n  }, []);\n\n  if (props.requestState) {\n    if (props.requestState.apiInProcess === true) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Loading\");\n    } else {\n      debugger;\n\n      if (props.requestState.status == 200 && props.initialData) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Data coms here!!\", props.initialData.modetype);\n      } else {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"No data fetched!!\");\n      }\n    }\n  } // if(props.match.params.paymentModeId)\n  // {\n  //     props.onLoadDataHandler(idToFetch);\n  //         return(\n  //             <h1>This is the Edit Component</h1>\n  //         );\n  // }\n  // else\n  // {\n  //     return(\n  //         <h1>Error fetching data!</h1>\n  //     );\n  // }\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    initialData: state.PaymentReducer.selectedPaymentDetail,\n    requestState: state.ApiReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoadDataHandler: idToFetch => dispatch(PaymentActions.loadPaymentData(idToFetch))\n  };\n};\n\nEditPaymentMeth = reduxForm({\n  form: 'EditPaymentMeth'\n})(EditPaymentMeth);\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPaymentMeth);","map":{"version":3,"sources":["/Users/akshar.mistry/Desktop/Workspace/budget-manager/front-end/src/components/PaymentModes/EditPayment/EditPaymentMeth.js"],"names":["React","useState","useEffect","connect","Field","reduxForm","Form","PaymentActions","EditPaymentMeth","props","idToFetch","match","params","paymentModeId","onLoadDataHandler","requestState","apiInProcess","status","initialData","modetype","mapStateToProps","state","PaymentReducer","selectedPaymentDetail","ApiReducer","mapDispatchToProps","dispatch","loadPaymentData","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,KAAKC,cAAZ,MAAgC,8CAAhC;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B;AACAP,EAAAA,SAAS,CAAE,MAAM;AAEb,QAAIQ,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,aAAnC;;AACA,QAAGJ,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,aAAtB,EACA;AACIJ,MAAAA,KAAK,CAACK,iBAAN,CAAwBJ,SAAxB;AACH;AACJ,GAPQ,EAOP,EAPO,CAAT;;AASA,MAAGD,KAAK,CAACM,YAAT,EACA;AACI,QAAGN,KAAK,CAACM,YAAN,CAAmBC,YAAnB,KAAoC,IAAvC,EACA;AACI,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACH,KAHD,MAKA;AACI;;AACA,UAAIP,KAAK,CAACM,YAAN,CAAmBE,MAAnB,IAA6B,GAA7B,IAAoCR,KAAK,CAACS,WAA9C,EACA;AACG,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACFT,KAAK,CAACS,WAAN,CAAkBC,QADhB,CAAR;AAGF,OALD,MAOA;AACI,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACH;AAEJ;AACJ,GAhC4B,CAmC7B;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEH,CAnDD;;AAqDA,MAAMC,eAAe,GAAKC,KAAF,IAAa;AACjC,SAAO;AACHH,IAAAA,WAAW,EAAGG,KAAK,CAACC,cAAN,CAAqBC,qBADhC;AAEHR,IAAAA,YAAY,EAAGM,KAAK,CAACG;AAFlB,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAKC,QAAF,IAAgB;AACvC,SAAM;AACFZ,IAAAA,iBAAiB,EAAIJ,SAAD,IAAegB,QAAQ,CAAEnB,cAAc,CAACoB,eAAf,CAA+BjB,SAA/B,CAAF;AADzC,GAAN;AAGH,CAJD;;AAMCF,eAAe,GAAGH,SAAS,CAAC;AACzBuB,EAAAA,IAAI,EAAE;AADmB,CAAD,CAAT,CAEdpB,eAFc,CAAlB;AAID,eAAeL,OAAO,CAACiB,eAAD,EAAmBK,kBAAnB,CAAP,CAA8CjB,eAA9C,CAAf","sourcesContent":["import React, { useState , useEffect } from 'react';\nimport {connect} from 'react-redux';\nimport { Field, reduxForm } from 'redux-form'\nimport Form from 'react-bootstrap/Form'\nimport * as PaymentActions from '../../../store/actions/PaymentActionCreators';\n\nlet EditPaymentMeth = (props) => {\n    debugger;\n    useEffect( () => {\n        \n        let idToFetch = props.match.params.paymentModeId;\n        if(props.match.params.paymentModeId)\n        {\n            props.onLoadDataHandler(idToFetch);\n        }\n    },[] );\n\n    if(props.requestState)\n    {\n        if(props.requestState.apiInProcess === true)\n        {\n            return(<h1>Loading</h1>);\n        }\n        else\n        {\n            debugger;\n            if( props.requestState.status == 200 && props.initialData )\n            {\n               return( <h1>Data coms here!!\n                    {props.initialData.modetype}\n                </h1>);\n            }\n            else\n            {\n                return(<h1>No data fetched!!</h1>);\n            }\n           \n        }\n    }\n\n   \n    // if(props.match.params.paymentModeId)\n    // {\n\n    //     props.onLoadDataHandler(idToFetch);\n\n    //         return(\n    //             <h1>This is the Edit Component</h1>\n    //         );\n    // }\n    // else\n    // {\n    //     return(\n    //         <h1>Error fetching data!</h1>\n    //     );\n    // }\n    \n}\n\nconst mapStateToProps = ( state ) => {\n    return {\n        initialData : state.PaymentReducer.selectedPaymentDetail,\n        requestState : state.ApiReducer,\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => {\n    return{\n        onLoadDataHandler : (idToFetch) => dispatch( PaymentActions.loadPaymentData(idToFetch) )\n    }\n}\n\n EditPaymentMeth = reduxForm({\n    form: 'EditPaymentMeth'\n  })(EditPaymentMeth)\n\nexport default connect(mapStateToProps , mapDispatchToProps)(EditPaymentMeth);"]},"metadata":{},"sourceType":"module"}